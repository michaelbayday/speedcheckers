{"ast":null,"code":"var _jsxFileName = \"/home/michael/Desktop/Practice/take-home/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport Row from \"../components/Row\";\n\nconst App = () => {\n  const {\n    0: rowNum,\n    1: setRowNum\n  } = useState(8);\n  const {\n    0: inputRows,\n    1: setInput\n  } = useState(8);\n  const {\n    0: board,\n    1: setBoard\n  } = useState([]);\n  const {\n    0: circle,\n    1: setShape\n  } = useState(true);\n  const {\n    0: topColorRed,\n    1: setTopColor\n  } = useState(true);\n  useEffect(() => {\n    setBoard(() => {\n      const newBoard = [];\n\n      for (let i = 0; i < rowNum; i++) {\n        newBoard.push([]);\n\n        for (let j = 0; j < rowNum; j++) {\n          if (i <= 1) {\n            newBoard[i].push(\"t\");\n          } else if (i >= rowNum - 2) {\n            newBoard[i].push(\"b\");\n          } else {\n            newBoard[i].push(\"o\");\n          }\n        }\n      }\n\n      return newBoard;\n    });\n  }, [rowNum]);\n  return __jsx(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Number of Board Rows\"), __jsx(\"input\", {\n    type: \"number\",\n    value: inputRows,\n    onChange: e => {\n      setInput(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: () => {\n      setRowNum(inputRows);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Submit\"), __jsx(\"div\", {\n    className: \"toggles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"shape-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Select your shape\"), __jsx(\"div\", {\n    className: \"toggles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"shape\",\n    value: true,\n    onChange: () => {\n      setShape(true);\n    },\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Circle\"), __jsx(\"input\", {\n    type: \"radio\",\n    name: \"shape\",\n    value: false,\n    onChange: () => {\n      setShape(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Square\"))), __jsx(\"div\", {\n    className: \"toggles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Choose the top player's color\"), __jsx(\"div\", {\n    className: \"color-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"color\",\n    value: true,\n    onChange: () => {\n      setTopColor(true);\n    },\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Red\"), __jsx(\"input\", {\n    type: \"radio\",\n    name: \"color\",\n    value: false,\n    onChange: () => {\n      setTopColor(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Black\")))), board.map((el, rowNum) => __jsx(Row, {\n    rowData: el,\n    rowNum: rowNum,\n    circle: circle,\n    topColorRed: topColorRed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/michael/Desktop/Practice/take-home/src/pages/index.js"],"names":["useState","useEffect","Row","App","rowNum","setRowNum","inputRows","setInput","board","setBoard","circle","setShape","topColorRed","setTopColor","newBoard","i","push","j","e","target","value","map","el"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Row from \"../components/Row\";\n\nconst App = () => {\n  const [rowNum, setRowNum] = useState(8);\n  const [inputRows, setInput] = useState(8);\n  const [board, setBoard] = useState([]);\n  const [circle, setShape] = useState(true);\n  const [topColorRed, setTopColor] = useState(true);\n  useEffect(() => {\n    setBoard(() => {\n      const newBoard = [];\n      for (let i = 0; i < rowNum; i++) {\n        newBoard.push([]);\n        for (let j = 0; j < rowNum; j++) {\n          if (i <= 1) {\n            newBoard[i].push(\"t\");\n          } else if (i >= rowNum - 2) {\n            newBoard[i].push(\"b\");\n          } else {\n            newBoard[i].push(\"o\");\n          }\n        }\n      }\n      return newBoard;\n    });\n  }, [rowNum]);\n  return (\n    <div className=\"main\">\n      <h3>Number of Board Rows</h3>\n      <input\n        type=\"number\"\n        value={inputRows}\n        onChange={(e) => {\n          setInput(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          setRowNum(inputRows);\n        }}\n      >\n        Submit\n      </button>\n      <div className=\"toggles\">\n        <div className=\"shape-toggle\">\n          <h3>Select your shape</h3>\n          <div className=\"toggles\">\n            <input\n              type=\"radio\"\n              name=\"shape\"\n              value={true}\n              onChange={() => {\n                setShape(true);\n              }}\n              defaultChecked\n            />\n            <label for=\"circle\">Circle</label>\n            <input\n              type=\"radio\"\n              name=\"shape\"\n              value={false}\n              onChange={() => {\n                setShape(false);\n              }}\n            />\n            <label for=\"square\">Square</label>\n          </div>\n        </div>\n        <div className=\"toggles\">\n          <h3>Choose the top player's color</h3>\n\n          <div className=\"color-toggle\">\n            <input\n              type=\"radio\"\n              name=\"color\"\n              value={true}\n              onChange={() => {\n                setTopColor(true);\n              }}\n              defaultChecked\n            />\n            <label for=\"circle\">Red</label>\n            <input\n              type=\"radio\"\n              name=\"color\"\n              value={false}\n              onChange={() => {\n                setTopColor(false);\n              }}\n            />\n            <label for=\"square\">Black</label>\n          </div>\n        </div>\n      </div>\n      {board.map((el, rowNum) => (\n        <Row\n          rowData={el}\n          rowNum={rowNum}\n          circle={circle}\n          topColorRed={topColorRed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}