{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/michael/Desktop/Practice/take-home/src/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport Row from \"../components/Row\";\n\nvar App = function App() {\n  var _useState = useState(8),\n      rowNums = _useState[0],\n      setRowNum = _useState[1];\n\n  var _useState2 = useState(8),\n      inputRows = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      board = _useState3[0],\n      setBoard = _useState3[1];\n\n  var _useState4 = useState(true),\n      circle = _useState4[0],\n      setShape = _useState4[1];\n\n  var _useState5 = useState(true),\n      topColorRed = _useState5[0],\n      setTopColor = _useState5[1];\n\n  var _useState6 = useState([]),\n      selectedPiece = _useState6[0],\n      setSelectedPiece = _useState6[1];\n\n  var _useState7 = useState([]),\n      potentialMoves = _useState7[0],\n      setPotentialMoves = _useState7[1];\n\n  var _useState8 = useState(\"t\"),\n      currentPlayer = _useState8[0],\n      setPlayer = _useState8[1];\n\n  var _useState9 = useState(false),\n      resetGame = _useState9[0],\n      setReset = _useState9[1];\n\n  useEffect(function () {\n    var savedGame = JSON.parse(localStorage.getItem(\"board\"));\n\n    if (!savedGame) {\n      setBoard(function () {\n        var newBoard = [];\n\n        for (var i = 0; i < rowNums; i++) {\n          newBoard.push([]);\n\n          for (var j = 0; j < rowNums; j++) {\n            if (i <= 1) {\n              newBoard[i].push(\"t\");\n            } else if (i >= rowNums - 2) {\n              newBoard[i].push(\"b\");\n            } else {\n              newBoard[i].push(\"o\");\n            }\n          }\n        }\n\n        return newBoard;\n      });\n      setBoard(savedGame);\n    }\n  }, [rowNums, resetGame]);\n\n  var saveGame = function saveGame() {\n    localStorage.setItem(\"board\", JSON.stringify(board));\n  };\n\n  return __jsx(\"div\", {\n    className: \"main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Number of Board Rows\"), __jsx(\"input\", {\n    type: \"number\",\n    value: inputRows,\n    onChange: function onChange(e) {\n      setInput(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      setRowNum(inputRows);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Submit\")), __jsx(\"div\", {\n    className: \"toggles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"shape-toggle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Select your shape\"), __jsx(\"div\", {\n    className: \"toggles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"shape\",\n    value: true,\n    onChange: function onChange() {\n      setShape(true);\n    },\n    defaultChecked: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Circle\"), __jsx(\"input\", {\n    type: \"radio\",\n    name: \"shape\",\n    value: false,\n    onChange: function onChange() {\n      setShape(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"square\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Square\"))), __jsx(\"div\", {\n    className: \"color-toggles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Choose the top player's color\"), __jsx(\"div\", {\n    className: \"toggles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"color\",\n    value: true,\n    onChange: function onChange() {\n      setTopColor(true);\n    },\n    defaultChecked: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Red\"), __jsx(\"input\", {\n    type: \"radio\",\n    name: \"color\",\n    value: false,\n    onChange: function onChange() {\n      setTopColor(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"square\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Black\")))), board.map(function (el, rowNum) {\n    return __jsx(Row, {\n      key: rowNum,\n      rowData: el,\n      rowNum: rowNum,\n      circle: circle,\n      topColorRed: topColorRed,\n      selectedPiece: selectedPiece,\n      setSelectedPiece: setSelectedPiece,\n      potentialMoves: potentialMoves,\n      setPotentialMoves: setPotentialMoves,\n      board: board,\n      currentPlayer: currentPlayer,\n      setPlayer: setPlayer,\n      setBoard: setBoard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    });\n  }), __jsx(\"div\", {\n    className: \"game-management\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Game management\"), __jsx(\"button\", {\n    onClick: saveGame,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Save Game\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      localStorage.removeItem(\"board\");\n      setReset(!resetGame);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Reset Game\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/michael/Desktop/Practice/take-home/src/pages/index.js"],"names":["useState","useEffect","Row","App","rowNums","setRowNum","inputRows","setInput","board","setBoard","circle","setShape","topColorRed","setTopColor","selectedPiece","setSelectedPiece","potentialMoves","setPotentialMoves","currentPlayer","setPlayer","resetGame","setReset","savedGame","JSON","parse","localStorage","getItem","newBoard","i","push","j","saveGame","setItem","stringify","e","target","value","map","el","rowNum","removeItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Row from \"../components/Row\";\n\nconst App = () => {\n  const [rowNums, setRowNum] = useState(8);\n  const [inputRows, setInput] = useState(8);\n  const [board, setBoard] = useState([]);\n  const [circle, setShape] = useState(true);\n  const [topColorRed, setTopColor] = useState(true);\n  const [selectedPiece, setSelectedPiece] = useState([]);\n  const [potentialMoves, setPotentialMoves] = useState([]);\n  const [currentPlayer, setPlayer] = useState(\"t\");\n  const [resetGame, setReset] = useState(false);\n  useEffect(() => {\n    const savedGame = JSON.parse(localStorage.getItem(\"board\"));\n    if (!savedGame) {\n      setBoard(() => {\n        const newBoard = [];\n        for (let i = 0; i < rowNums; i++) {\n          newBoard.push([]);\n          for (let j = 0; j < rowNums; j++) {\n            if (i <= 1) {\n              newBoard[i].push(\"t\");\n            } else if (i >= rowNums - 2) {\n              newBoard[i].push(\"b\");\n            } else {\n              newBoard[i].push(\"o\");\n            }\n          }\n        }\n        return newBoard;\n      });\n      setBoard(savedGame);\n    }\n  }, [rowNums, resetGame]);\n\n  const saveGame = () => {\n    localStorage.setItem(\"board\", JSON.stringify(board));\n  };\n  return (\n    <div className=\"main\">\n      <div>\n        <h3>Number of Board Rows</h3>\n        <input\n          type=\"number\"\n          value={inputRows}\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        <button\n          onClick={() => {\n            setRowNum(inputRows);\n          }}\n        >\n          Submit\n        </button>\n      </div>\n      <div className=\"toggles\">\n        <div className=\"shape-toggle\">\n          <h3>Select your shape</h3>\n          <div className=\"toggles\">\n            <input\n              type=\"radio\"\n              name=\"shape\"\n              value={true}\n              onChange={() => {\n                setShape(true);\n              }}\n              defaultChecked\n            />\n            <label htmlFor=\"circle\">Circle</label>\n            <input\n              type=\"radio\"\n              name=\"shape\"\n              value={false}\n              onChange={() => {\n                setShape(false);\n              }}\n            />\n            <label htmlFor=\"square\">Square</label>\n          </div>\n        </div>\n        <div className=\"color-toggles\">\n          <h3>Choose the top player's color</h3>\n          <div className=\"toggles\">\n            <input\n              type=\"radio\"\n              name=\"color\"\n              value={true}\n              onChange={() => {\n                setTopColor(true);\n              }}\n              defaultChecked\n            />\n            <label htmlFor=\"circle\">Red</label>\n            <input\n              type=\"radio\"\n              name=\"color\"\n              value={false}\n              onChange={() => {\n                setTopColor(false);\n              }}\n            />\n            <label htmlFor=\"square\">Black</label>\n          </div>\n        </div>\n      </div>\n      {board.map((el, rowNum) => (\n        <Row\n          key={rowNum}\n          rowData={el}\n          rowNum={rowNum}\n          circle={circle}\n          topColorRed={topColorRed}\n          selectedPiece={selectedPiece}\n          setSelectedPiece={setSelectedPiece}\n          potentialMoves={potentialMoves}\n          setPotentialMoves={setPotentialMoves}\n          board={board}\n          currentPlayer={currentPlayer}\n          setPlayer={setPlayer}\n          setBoard={setBoard}\n        />\n      ))}\n      <div className=\"game-management\">\n        <h3>Game management</h3>\n        <button onClick={saveGame}>Save Game</button>\n        <button\n          onClick={() => {\n            localStorage.removeItem(\"board\");\n            setReset(!resetGame);\n          }}\n        >\n          Reset Game\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}