{"version":3,"file":"static/webpack/static/development/pages/index.js.f42ad376954a05f11185.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Row from \"../components/Row\";\n\nconst App = () => {\n  const [rowNum, setRowNum] = useState(8);\n  const [inputRows, setInput] = useState(8);\n  const [board, setBoard] = useState([]);\n  const [circle, setShape] = useState(true);\n  const [topColorRed, setTopColor] = useState(true);\n  useEffect(() => {\n    setBoard(() => {\n      const newBoard = [];\n      for (let i = 0; i < rowNum; i++) {\n        newBoard.push([]);\n        for (let j = 0; j < rowNum; j++) {\n          if (i <= 1) {\n            newBoard[i].push(\"t\");\n          } else if (i >= rowNum - 2) {\n            newBoard[i].push(\"b\");\n          } else {\n            newBoard[i].push(\"o\");\n          }\n        }\n      }\n      return newBoard;\n    });\n  }, [rowNum]);\n  return (\n    <div className=\"main\">\n      <h3>Number of Board Rows</h3>\n      <input\n        type=\"number\"\n        value={inputRows}\n        onChange={(e) => {\n          setInput(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          setRowNum(inputRows);\n        }}\n      >\n        Submit\n      </button>\n      <h3>Select your shape</h3>\n      <div className=\"shape-toggle\">\n        <input\n          type=\"radio\"\n          name=\"shape\"\n          value={true}\n          onChange={() => {\n            setShape(true);\n          }}\n          defaultChecked\n        />\n        <label for=\"circle\">Circle</label>\n        <input\n          type=\"radio\"\n          name=\"shape\"\n          value={false}\n          onChange={() => {\n            setShape(false);\n          }}\n        />\n        <label for=\"square\">Square</label>\n      </div>\n      {board.map((el, rowNum) => (\n        <Row rowData={el} rowNum={rowNum} circle={circle} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;;;;A","sourceRoot":""}